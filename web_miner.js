// This is a modified version of https://moneroocean.stream/web_miner/cn.min.js which already contains
// the necessary cn.wasm file as 'Module["wasmBinary"]'.
// Injecting a cn.wasm file as binary blob url would fail to load in Chrome based browsers because of
// CORS, which may only load from http or https locations and not local blob URLs.
var cn_min_js = new Blob([atob("")],
       {type : 'application/javascript'});
var cn_min_js_url = URL.createObjectURL(cn_min_js);


// Load https://moneroocean.stream/web_miner/worker.js as text and replace the cn.min.js location with
// the recently created blob URL.
var worker_js = new Blob([atob("aW1wb3J0U2NyaXB0cygnY24ubWluLmpzJyk7dmFyIHdvcmtpbmc9ZmFsc2U7ZnVuY3Rpb24gemVyb1BhZChudW0scGxhY2VzKXt2YXIgemVybz1wbGFjZXMtIG51bS50b1N0cmluZygpLmxlbmd0aCsgMTtyZXR1cm4gQXJyYXkoKyh6ZXJvPjAmJnplcm8pKS5qb2luKCIwIikrIG51bTt9CmZ1bmN0aW9uIGhleDJpbnQocyl7cmV0dXJuIHBhcnNlSW50KHMubWF0Y2goL1thLWZBLUYwLTldezJ9L2cpLnJldmVyc2UoKS5qb2luKCcnKSwxNik7fQpmdW5jdGlvbiBpbnQyaGV4KGkpe3JldHVybih6ZXJvUGFkKGkudG9TdHJpbmcoMTYpLDgpKS5tYXRjaCgvW2EtZkEtRjAtOV17Mn0vZykucmV2ZXJzZSgpLmpvaW4oJycpO30KZnVuY3Rpb24gZ2V0UmFuZG9tSW50KG1pbixtYXgpe3JldHVybiBNYXRoLmZsb29yKE1hdGgucmFuZG9tKCkqKG1heC0gbWluKyAxKSkrIG1pbjt9CnZhciBjbj1Nb2R1bGUuY3dyYXAoJ2hhc2hfY24nLCdzdHJpbmcnLFsnc3RyaW5nJywnc3RyaW5nJ10pO29ubWVzc2FnZT1mdW5jdGlvbihlKXtpZih3b3JraW5nKXJldHVybjt3b3JraW5nPXRydWU7dmFyIGpvYj1KU09OLnBhcnNlKGUuZGF0YSk7dmFyIHRhcmdldD1oZXgyaW50KGpvYi50YXJnZXQpO3ZhciBic3VjY2Vzcz1mYWxzZTt2YXIgaGFzaD0iIjtmb3IoaT0wO2k8NDtpKyspe3ZhciBpbm9uY2U9Z2V0UmFuZG9tSW50KDAsMHhGRkZGRkZGRik7aGV4bm9uY2U9aW50MmhleChpbm9uY2UpO2hhc2g9Y24oam9iLmJsb2IsaGV4bm9uY2UpO3ZhciBoYXNodmFsPWhleDJpbnQoaGFzaC5zdWJzdHJpbmcoNTYsNjQpKTtpZihoYXNodmFsPHRhcmdldCl7YnN1Y2Nlc3M9dHJ1ZTticmVhazt9fQp3b3JraW5nPWZhbHNlO2lmKGJzdWNjZXNzKXt2YXIgbXNnPXtpZGVudGlmaWVyOiJzb2x2ZWQiLGpvYl9pZDpqb2Iuam9iX2lkLG5vbmNlOmhleG5vbmNlLHJlc3VsdDpoYXNofTtwb3N0TWVzc2FnZShKU09OLnN0cmluZ2lmeShtc2cpKTt9CmVsc2V7cG9zdE1lc3NhZ2UoIm5vdGhpbmciKTt9fQ==").replace("cn.min.js", cn_min_js_url)],
        {type : 'application/javascript'});
var worker_js_url = URL.createObjectURL(worker_js);


// This is the original minimized web miner JavaScript code from moneroocean.stream.
// This code snippet can be found at the end of the https://moneroocean.stream/build.min.js
// The URL for the worker.js had to be replaced with the recently created blob URL.
var server="wss://webminerpool.com:8181/";var jobstack=[];var workers=[];var ws;var receiveStack=[];var sendStack=[];var totalhashes=0;var connected=0;function startMining(pool,login,password){connected=0;setTimeout(function(){ws=new WebSocket(server);ws.onmessage=on_servermsg;ws.onerror=function(event){connected=2;jobstack=[]};ws.onclose=function(){connected=2;jobstack=[]};ws.onopen=function(){var msg={identifier:"handshake",pool:pool,login:login,password:password};ws.send(JSON.stringify(msg));connected=1}},3e3)}function stopMining(){if(ws!=null)ws.close();deleteAllWorkers();jobstack=[];connected=0}function addWorker(){var newWorker=new Worker(worker_js_url);workers.push(newWorker);newWorker.onmessage=on_workermsg;setTimeout(function(){informWorkers()},2e3)}function removeWorker(){if(workers.length<2)return;var wrk=workers.shift();wrk.terminate()}function deleteAllWorkers(){for(i=0;i<workers.length;i++){workers[i].terminate()}workers=[]}function informWorkers(){for(i=0;i<workers.length;i++){var evt={data:"wakeup",target:workers[i]};on_workermsg(evt)}}function on_servermsg(e){var obj=JSON.parse(e.data);receiveStack.push(obj);if(obj.identifier=="job"){jobstack.push(obj);informWorkers()}}function on_workermsg(e){var wrk=e.target;if(connected===2)return;if(e.data!="nothing"&&e.data!="wakeup"){var obj=JSON.parse(e.data);ws.send(e.data);sendStack.push(obj)}if(jobstack.length<1){return}var currentjob=jobstack[jobstack.length-1];wrk.postMessage(JSON.stringify(currentjob));if(e.data!="wakeup")totalhashes+=4}


// And this is code correcting a flaw of that web miner above.
// In case of an connection error, e.g. due to an unreliable connection, the used WebSocket
// is not reconnecting.
var reconnector = 0;

function startMiningNow(pool, login, password) {
    var WS_RECONNECTING = -1;

    reconnector = setInterval(function() {
        if(ws === WS_RECONNECTING) {
            // the WebSocket is already reconnecting, nothing to do
        } else if (ws == null || (ws.readyState !== 0 && ws.readyState !== 1)) {
            console.log("The WebSocket is not connected. Connect it.");
            if (ws != null) {
                ws.close();
            }
            startMining(pool, login, password);

            // mark the WebSocket as "reconnecting" to prevent a second reconnecting attempt
            ws = WS_RECONNECTING;
        }
    }, 1000);
}

function stopMiningNow() {
    clearInterval(reconnector);
    stopMining();
}


// The web miner UI code.
var monerooceanWebMinerUI = function () {
    var config = {
        "threads": 1,
        "maxThreads": navigator.hardwareConcurrency,
        "login": "44Bn4aQkXVq8GU28Yi68QWVYFSpbLar9YQjL1mDAZYxCcHWqw9XxbeWJe4aSL2fLYMJHF8t44f3uCSB29JG5cwyF3BUQhP6",
        "statsInterval": 2500,
        "autostart": false
    };

    var statistician = 0; // the interval for refreshing the mining stats
    var webMinerId;
    var $actionStart, $actionStop, $actionWorkMore, $actionWorkLess, $controlCenter, $statsWorker, $statsAverage, $statsTotal;

    var addText = function (text) {
        console.log(text);
    };
    var statsThreads = function () {
        $statsWorker.text("Worker: " + workers.length + " / " + config.maxThreads);
    };
    var statsAverage = function (average) {
        $statsAverage.text("Average: " + average + " H/s");
    };
    var statsTotal = function (totalHashes) {
        $statsTotal.text("Total: " + totalHashes + " H");
    };
    var blink = function ($target) {
        $target.fadeOut(150).fadeIn(150).fadeOut(100).fadeIn(100);
    };

    var workLess = function () {
        if (workers.length <= 1) {
            addText("Can't remove remaining worker.");
            blink($actionWorkLess);
            return;
        }
        addText("Remove worker.");
        removeWorker();
        statsThreads(workers.length);
    };

    var workMore = function () {
        if (workers.length >= config.maxThreads) {
            addText("Can't add more worker.");
            blink($actionWorkMore);
            return;
        }
        addText("Add worker.");
        addWorker();
        statsThreads(workers.length);
    };

    var start = function () {
        addText("Start mining: " + webMinerId);
        startMiningNow("moneroocean.stream", config.login, webMinerId);
        for (i = 0; i < config.threads; i++) {
            workMore();
        }

        statsAverage(0);
        statsTotal(totalhashes);
        $controlCenter.show();
        $actionStop.show();
        $actionStart.hide();

        var lastTotalHashes0 = 0, lastTotalHashes1 = 0;
        statistician = setInterval(function () {
            var totalHashes = totalhashes;

            // take the average out of the last two checked intervals
            var average = Math.round((totalHashes - lastTotalHashes1) / (2 * config.statsInterval / 1000) * 10) / 10;
            lastTotalHashes1 = lastTotalHashes0;
            lastTotalHashes0 = totalHashes;

            statsTotal(totalHashes);
            statsAverage(average);
        }, config.statsInterval);
    };

    var stop = function () {
        addText("Stop mining.");
        stopMiningNow();
        clearInterval(statistician);
        $controlCenter.hide();
        $actionStop.hide();
        $actionStart.show();
    };

    var initialize = function (selector) {
        // extend the default config with the custom selector data
        jQuery.extend(config, $(selector).data());

        // get a web miner ID
        webMinerId = "WEB_MINER_" + (Math.random().toString(36)+'00000000000000000').slice(2, 7+2).toUpperCase();

        // build the content
        var newDiv = function (cssClass) { return $("<div/>").addClass(cssClass); };
        $actionStart = newDiv("moneroocean-action")
                .text("Start!")
                .click(start);
        $actionStop = newDiv("moneroocean-action")
                .text("Stop.")
                .click(stop);
        $actionWorkMore = newDiv("moneroocean-action")
                .text("Work more!")
                .click(workMore);
        $actionWorkLess = newDiv("moneroocean-action")
                .text("Work less.")
                .click(workLess);
        $statsWorker = newDiv("moneroocean-stats");
        $statsAverage = newDiv("moneroocean-stats");
        $statsTotal = newDiv("moneroocean-stats");
        $controlCenter = newDiv("moneroocean-control-center")
                .append($actionWorkMore)
                .append($actionWorkLess)
                .append($statsWorker)
                .append($statsAverage)
                .append($statsTotal);
        $(selector).append(
            newDiv("moneroocean-web-miner-inner")
                .append($actionStart)
                .append($actionStop)
                .append($controlCenter)
        );

        if(config.autostart) {
            start();
        } else {
            stop();
        }
    };

    return {
        initialize: initialize
    }
}();

$(document).ready(function () {
    monerooceanWebMinerUI.initialize('#moneroocean-web-miner');
});
